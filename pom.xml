<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.codebind</groupId>
  <artifactId>maven-demo</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <packaging>war</packaging>
  
  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>
  
  <build>
        <plugins>
           <plugin>
            	<groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.7.0</version>
                <!-- ursprünglich 2.0.2 -->
                <configuration>
                    <source>1.8</source>
                    <target>1.8</target>
                    <!-- ursprünglich beide 1.6 -->
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.12</version>
            </plugin>
        </plugins>
  </build>

  <dependencyManagement>
    <dependencies>
        <dependency>
            <groupId>org.jboss.arquillian</groupId>
            <artifactId>arquillian-bom</artifactId>
            <version>1.1.4.Final</version>
            <scope>import</scope>
            <type>pom</type>
        </dependency>
    </dependencies>
  </dependencyManagement>
  
  <dependencies>
  	<!--  Um die Arquillian Tests in Form eines JUnit Tests auszuführen -->
  	<dependency>
    	<groupId>junit</groupId>
    	<artifactId>junit</artifactId>
    	<version>4.13-beta-2</version>
    	<scope>test</scope>
	</dependency>
	<!-- Arquillian- und ShrinkWrap-APIs für die Arquillian-JUnit-Integration -->
	<dependency>
    	<groupId>org.jboss.arquillian.junit</groupId>
    	<artifactId>arquillian-junit-container</artifactId>
    	<scope>test</scope>
	</dependency>
	
	<!-- Konfiguration von Maven, dass JPA 2 Annotationen verarbeitet werden können -->
	<dependency>
    	<groupId>org.hibernate</groupId>
    	<artifactId>hibernate-jpamodelgen</artifactId>
    	<version>1.2.0.Final</version>
    	<scope>provided</scope>
	</dependency>
	
	<dependency>
		<groupId>javax</groupId>
		<artifactId>javaee-api</artifactId>
		<version>7.0</version>
		<scope>provided</scope>
	</dependency>
	
  </dependencies>
	
  <profiles>
        <profile>
            <id>arquillian-weld-ee-embedded</id>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.spec</groupId>
                    <artifactId>jboss-javaee-6.0</artifactId>
                    <version>1.0.0.Final</version>
                    <type>pom</type>
                    <scope>provided</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-weld-ee-embedded-1.1</artifactId>
                    <version>1.0.0.CR5</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.jboss.weld</groupId>
                    <artifactId>weld-core</artifactId>
                    <version>1.1.9.Final</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-simple</artifactId>
                    <version>1.5.10</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
        </profile>
        <profile>
            <id>arquillian-payara-embedded</id>
            <dependencies>
                <dependency>
    				<groupId>fish.payara.arquillian</groupId>
    				<artifactId>arquillian-payara-server-4-embedded</artifactId>
    				<version>1.0.Beta2</version>
    				<scope>test</scope>
				</dependency>
                <dependency>
    				<groupId>fish.payara.extras</groupId>
    				<artifactId>payara-embedded-all</artifactId>
    				<version>4.1.2.173.0.1</version>
    				<!-- <version>4.1.2.2</version> -->
    				<scope>test</scope>
				</dependency>
				<dependency>
					<groupId>javax</groupId>
					<artifactId>javaee-api</artifactId>
					<version>7.0</version>
					<scope>provided</scope>
				</dependency>
            </dependencies>
        </profile>
        <profile>
        <!-- What to do about the expired certificate: https://stackoverflow.com/questions/18248020/certificate-has-expired-in-log-by-starting-glassfish-3-1-2 -->
            <id>arquillian-glassfish-embedded</id>
            <dependencies>
                <dependency>
                    <groupId>org.jboss.arquillian.container</groupId>
                    <artifactId>arquillian-glassfish-embedded-3.1</artifactId>
                    <version>1.0.0.CR3</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.glassfish.main.extras</groupId>
                    <artifactId>glassfish-embedded-all</artifactId>
                    <version>3.1.2</version>
                    <scope>provided</scope>
                </dependency>
            </dependencies>
            <build>
        		<testResources>
            		<testResource>
                		<directory>src/test/resources</directory>
            		</testResource>
            		<testResource>
                		<directory>src/test/resources-glassfish-embedded</directory>
            		</testResource>
        		</testResources>
        		<plugins>
            		<plugin>
                		<groupId>org.apache.maven.plugins</groupId>
                		<artifactId>maven-surefire-plugin</artifactId>
                		<version>2.12</version>
                		<configuration>
                    		<systemPropertyVariables>
                        		<java.util.logging.config.file>
                            		${project.build.testOutputDirectory}/logging.properties
                        		</java.util.logging.config.file>
                        		<derby.stream.error.file>
                            		${project.build.directory}/derby.log
                        		</derby.stream.error.file>
                    		</systemPropertyVariables>
                		</configuration>
            		</plugin>
        		</plugins>
    		</build>
        </profile>
  </profiles>
  
</project>